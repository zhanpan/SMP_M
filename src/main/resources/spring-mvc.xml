<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	 
	<!-- 扫描包项目控制器包 -->
	<context:component-scan base-package="com.pms.code">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	<!--会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter两个bean，是spring MVC为@Controllers分发请求所必须的  -->
	<mvc:annotation-driven />
	<!-- 当通过控制器的请求不存在的时候，使用默认处理器寻找静态页面 -->
	<mvc:default-servlet-handler />
	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<!-- 处理请求时返回json字符串的中文乱码问题 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
		<mvc:interceptors>  
    		<bean class="com.pms.code.interceptor.IsLoginInter" />  
	</mvc:interceptors> 
	<mvc:resources location="/resources/" mapping="/resources/**" />

	<!-- 视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/html/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<!--  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
		<!-- 默认编码 -->
		<!--  <property name="defaultEncoding" value="utf-8" />-->
		<!-- 文件大小最大值 2M -->
<!-- 		<property name="maxUploadSize" value="2097152" /> -->
		<!-- 最大文件大小，-1为无限止(-1) -->
		<!--  <property name="maxUploadSize" value="-1"/>-->
		<!-- 内存中的最大值 -->
		<!--<property name="maxInMemorySize" value="40960" />
		<property name="uploadTempDir" value="/upload/"/>
	  </bean>-->

	<!-- 异常拦截，跳转到指定页面 -->
	<bean id="handlerExceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.ixilai.app.exception.AuthorizationException">redirect:/login</prop>
			</props>
		</property>
	</bean>

	<!-- 引入配置文件 -->
	<bean id="redisProper"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db.properties" />
	</bean>
    <!-- 引入两个数据源：读 --><!-- 引入两个数据源：写 -->
<!-- 	<import resource="./spring-mybatis-write.xml" />
	<import resource="./spring-mybatis-read.xml" /> -->
	<!-- 公用 -->
<!-- 	<import resource="./applicationContext-shiro.xml" /> -->
	<import resource="./spring-mybatis.xml" />
	<!-- 配置swagger自动生成接口文档的框架  -->
	<!-- <mvc:resources mapping="/swagger/**" location="/swagger/" />
	<bean id="springSwaggerConfig" class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />
	<bean id="mySwaggerConfig" class="com.pms.code.util.SwaggerConfig">
		<property name="springSwaggerConfig" ref="springSwaggerConfig"></property>
	</bean> -->
	<bean class="com.pms.code.util.listener.SpringContextHolder"></bean>
</beans>